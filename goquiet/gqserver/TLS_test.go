package gqserver

import (
	"fmt"
	"testing"
)

func TestParseClientHello(*testing.T) {
	good := []byte{0x16, 0x03, 0x01, 0x02, 0x00, 0x01, 0x00, 0x01, 0xfc, 0x03, 0x03, 0x21, 0xb5, 0xa3, 0xba, 0xc7, 0x58, 0x59, 0x4f, 0x2a, 0xb1, 0xcd, 0xa5, 0x35, 0xec, 0xe8, 0x1c, 0x11, 0x80, 0xb6, 0xcd, 0x8c, 0x53, 0x73, 0xd2, 0xd9, 0xf6, 0x3b, 0xa3, 0x0c, 0xff, 0xe3, 0x93, 0x20, 0x41, 0xa3, 0x50, 0x3a, 0x06, 0xed, 0x6c, 0xf4, 0xb7, 0x83, 0x57, 0xf8, 0x17, 0xd0, 0x2d, 0x02, 0xa0, 0x44, 0x69, 0xef, 0x3c, 0xe2, 0xb2, 0xce, 0xe7, 0xf8, 0x2d, 0x8c, 0x37, 0x01, 0xa2, 0x02, 0x00, 0x1c, 0x2a, 0x2a, 0xc0, 0x2b, 0xc0, 0x2f, 0xc0, 0x2c, 0xc0, 0x30, 0xcc, 0xa9, 0xcc, 0xa8, 0xc0, 0x13, 0xc0, 0x14, 0x00, 0x9c, 0x00, 0x9d, 0x00, 0x2f, 0x00, 0x35, 0x00, 0x0a, 0x01, 0x00, 0x01, 0x97, 0xaa, 0xaa, 0x00, 0x00, 0xff, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x0b, 0x00, 0x00, 0x08, 0x69, 0x70, 0x2e, 0x34, 0x32, 0x2e, 0x70, 0x6c, 0x00, 0x17, 0x00, 0x00, 0x00, 0x23, 0x00, 0xc0, 0xc4, 0x0a, 0x2a, 0x03, 0xe5, 0xdd, 0xa3, 0xfb, 0xc8, 0x43, 0xb3, 0x4f, 0xa0, 0xf4, 0x58, 0xd3, 0x43, 0x4a, 0xe3, 0x3b, 0xab, 0x05, 0x48, 0x89, 0x64, 0xb5, 0x28, 0xed, 0x76, 0xb0, 0x7a, 0x0e, 0x0f, 0x46, 0x2d, 0x0b, 0x3a, 0xfc, 0xd1, 0x18, 0x57, 0x80, 0x51, 0xd7, 0x4b, 0x84, 0x3b, 0x61, 0xa2, 0xb2, 0x61, 0x4b, 0xa0, 0xb0, 0x64, 0x51, 0x36, 0x12, 0x1e, 0x96, 0x4c, 0xd2, 0x16, 0xe5, 0x19, 0xe7, 0x8c, 0x9d, 0xac, 0xf4, 0x6a, 0x94, 0xce, 0x49, 0xf2, 0xbd, 0xd0, 0xcf, 0x1c, 0x7d, 0x8d, 0x73, 0x56, 0x3f, 0xe7, 0x30, 0x4c, 0x55, 0xdf, 0x7e, 0x8b, 0x33, 0x12, 0xba, 0xb3, 0x90, 0xda, 0x64, 0xa9, 0x2d, 0x88, 0x6f, 0xec, 0xfe, 0x8f, 0x4f, 0x93, 0x1e, 0x4c, 0xa5, 0x50, 0xda, 0x8f, 0x1c, 0x8c, 0xbf, 0x0d, 0x50, 0xcc, 0x37, 0x84, 0xe2, 0xda, 0xa6, 0x3c, 0x9f, 0xf2, 0x48, 0xf5, 0x00, 0x42, 0x5e, 0x34, 0x48, 0x4f, 0x4a, 0xfd, 0xd8, 0xa4, 0x12, 0x57, 0xe6, 0xfc, 0x73, 0xf9, 0xde, 0xae, 0x64, 0x1d, 0x68, 0x91, 0x13, 0x1d, 0x23, 0x3f, 0x75, 0x94, 0xaa, 0x6d, 0x58, 0x10, 0xf3, 0xda, 0x42, 0x8c, 0x62, 0x6b, 0x04, 0xf4, 0x9b, 0x1c, 0x88, 0x75, 0x99, 0x8a, 0x0e, 0xe1, 0x30, 0x11, 0x02, 0xc0, 0xb7, 0x44, 0x1c, 0x8e, 0x34, 0x32, 0x05, 0x16, 0x21, 0x5a, 0x88, 0x00, 0x0d, 0x00, 0x14, 0x00, 0x12, 0x04, 0x03, 0x08, 0x04, 0x04, 0x01, 0x05, 0x03, 0x08, 0x05, 0x05, 0x01, 0x08, 0x06, 0x06, 0x01, 0x02, 0x01, 0x00, 0x05, 0x00, 0x05, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x10, 0x00, 0x0e, 0x00, 0x0c, 0x02, 0x68, 0x32, 0x08, 0x68, 0x74, 0x74, 0x70, 0x2f, 0x31, 0x2e, 0x31, 0x75, 0x50, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x02, 0x01, 0x00, 0x00, 0x0a, 0x00, 0x0a, 0x00, 0x08, 0xba, 0xba, 0x00, 0x1d, 0x00, 0x17, 0x00, 0x18, 0xba, 0xba, 0x00, 0x01, 0x00, 0x00, 0x15, 0x00, 0x5d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}
	client_hello, err := ParseClientHello(good)
	if err != nil {
		fmt.Println(err)
	} /*else {
		fmt.Printf("%x\n", client_hello.extensions[[2]byte{0x00, 0x00}])
	}*/
}
